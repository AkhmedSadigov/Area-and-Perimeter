<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAIAAAAHjs1qAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        cQAAEnEB89x6jgAABPBJREFUeF7t0iGSAwEMA8H8/9N7RMbnRYlL3VAlOJ8HasidInKniNwpIneKyJ0i
        cqeI3Ckid4rInSJyp4jcKSJ3isidInKniNwpIneKyJ0icqeI3Ckid4rInSJyp4jcKSJ3isidInKniNwp
        IneKyJ0icqeI3Ckid4rInSJyp4jcKSJ3isidInKniNwpIneKyJ0icqeI3Ckid4rInSJyp4jcKSJ3isid
        InKniNwpIneKyJ0icqfIP7l/4Lel1B25c1tK3ZE7t6XUHblzW0rdkTu3pdSdd7lnhe9JiyPrjtw5Ji2O
        rDty55i0OLLuyJ1j0uLIuiN3jkmLI+uO3DkmLY6sO3LnmLQ4su7InWPS4si6I3eOSYsj647cOSYtjqw7
        cueYtDiy7sidY9LiyLojd45JiyPrjtw5Ji2OrDty55i0OLLuyJ1j0uLIuiN3jkmLI+uO3DkmLY6sO3Ln
        mLQ4su7InWPS4si6I3eOSYsj647cOSYtjqw7cueYtDiy7sidY9LiyLojd45JiyPrjtw5Ji2OrDty55i0
        OLLuyJ1j0uLIuiN3jkmLI+uO3DkmLY6sO3LnmLQ4su7InWPS4si6I3eOSYsj647cOSYtjqw7cueYtDiy
        7sidY9LiyLojd45JiyPrjtw5Ji2OrDty55i0OLLuyJ1j0uLIuiN3jkmLI+uO3DkmLY6sO3LnmLQ4su7I
        nWPS4si6I3eOSYsj647cOSYtjqw7cueYtDiy7sidY9LiyLojd45JiyPrjtw5Ji2OrDty55i0OLLuyJ1j
        0uLIuiN3jkmLI+uO3DkmLY6sO3LnmLQ4su7InWPS4si6I3eOSYsj647cOSYtjqw7cueYtDiy7sidY9Li
        yLojd45JiyPrjtw5Ji2OrDty55i0OLLuyJ1j0uLIuiN3jkmLI+uO3DkmLY6sO3LnmLQ4su7InWPS4si6
        I3eOSYsj647cOSYtjqw7cueYtDiy7sidY9LiyLojd45JiyPrjtw5Ji2OrDty55i0OLLuyJ1j0uLIuiN3
        jkmLI+uO3DkmLY6sO3LnmLQ4su7InWPS4si6I3eOSYsj647cOSYtjqw7cueYtDiy7sidY9LiyLojd45J
        iyPrjtw5Ji2OrDty55i0OLLuyJ1j0uLIuiN3jkmLI+uO3DkmLY6sO3LnmLQ4su7InWPS4si6I3eOSYsj
        647cOSYtjqw7cueYtDiy7sidY9LiyLojd45JiyPrjtw5Ji2OrDty55i0OLLuyJ1j0uLIuiN3jkmLI+uO
        3DkmLY6sO3LnmLQ4su7InWPS4si6I3eOSYsj647cOSYtjqw7cueYtDiy7sidY9LiyLojd45JiyPrjtw5
        Ji2OrDty55i0OLLuyJ1j0uLIuiN3jkmLI+vOu9zh16TUHblzW0rdkTu3pdQduXNbSt2RO7el1J13bzhN
        7hSRO0XkThG5U0TuFJE7ReROEblTRO4UkTtF5E4RuVNE7hSRO0XkThG5U0TuFJE7ReROEblTRO4UkTtF
        5E4RuVNE7hSRO0XkThG5U0TuFJE7ReROEblTRO4UkTtF5E4RuVNE7hSRO0XkThG5U0TuFJE7ReROEblT
        RO4UkTtF5E4RuVNE7hSRO0XkThG5U0TuFJE7ReROEblTRO4UkTtF5E4RuVNE7hSRO0XkThG5U0TuFJE7
        ReROEblTRO4UkTtF5E6N5/kDT6VDn5FnEqwAAAAASUVORK5CYII=
</value>
  </data>
</root>